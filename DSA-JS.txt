                                                                                      LEVEL:1
                                                                                  =======================



// 1. Javascript Program to Check if a Number is Odd or Even.

let arr=[1,2,3,4];
let n=arr.length;
for(i=0;i<n;i++){
    if(arr[i]%2==0){
        console.log(arr[i]+"is a even number");
    }else{
        console.log(arr[i]+"is a odd number");
    }
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 2. Javascript Program to Convert temperature from Celsius to Fahrenheit.
// Formula - fahrenheit = celsius * 1.8 + 32


function cToF(celsius) 
{
  const cTemp = celsius;
  const cToFahr = cTemp * 9 / 5 + 32;
  const message = `${cTemp}\xB0C is ${cToFahr} \xB0F.`;
    console.log(message);
}

function fToC(fahrenheit) 
{
  const fTemp = fahrenheit;
  const fToCel = (fTemp - 32) * 5 / 9;
  const message = `${fTemp}\xB0F is ${fToCel}\xB0C.`;
    console.log(message);
} 
cToF(60);
fToC(45);

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 3. JavaScript Program to Find the Largest Among Three Numbers.

var x=5;
var y=6;
var z=10;
console.log(Math.max(x,y,z)+" "+"is maximum value");

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//4. JavaScript Program to print the multiplication table for a number.

let n=2;
let prod=1;

for(i=1;i<=10;i++){
    prod=n*i;
    console.log(prod);
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//5. JavaScript Program to Check if a Number is prime or not.

function testPrime(n){
    if(n==1){
        return false;
    }
    else if(n==2){
        return true;
    }
    else{
        for(i=2;i<n;i++){
            if(n%i==0){
                return false;
            }
        }
        return true;
    }
}

console.log(testPrime(2));

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                          LEVEL:2
                                                                                  =======================


// 1. JavaScript Program to print the Factorial of a Number

function factorial(n){
    let prod=1;
    
    for(i=n;i>=1;i--){
       prod=prod*i;
    }
    return prod;
}
console.log(factorial(5));

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 2. JavaScript Program to print the Fibonacci series

function fibonacci(n){
    fs=[0,1];
    if(n<=1){
        console.log(fs[0]);
    }
    if(n==2){
        console.log(fs);
    }
    if(n>2){
        for(i=1;i<=(n-1);i++){
            fs.push(fs[fs.length-1]+fs[fs.length-2]);
        }
        console.log(fs);
    }
}
(fibonacci(1));
(fibonacci(2));
(fibonacci(10));

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 3. JavaScript Program to find whether the string is palindrome or not.

function palindrome(str){
    
  let str1="";
  
  for( i=0;i<str.length/2;i++){
      if(str[i]!=str[str.length-1-i]){
          return "it is not a palindrome";
      }
       
  }
 return "it is a palindrome";
}
 console.log(palindrome("mom"));

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 4. JavaScript program to print the frequency of a character in a string.

function getFrequency(string) {
    var freq = {};
    for (var i=0; i<string.length;i++) {
        var character = string.charAt(i);
        if (freq[character]) {
           freq[character]++;
        } else {
           freq[character] = 1;
        }
    }

    return freq;
}
console.log(getFrequency("akshu"));

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 5. JavaScript program to sort the elements of the array (without using sort 
// function).

function sort(arr){
    
    for(let i=0;i<=arr.length;i++){
        for(let j=0;j<arr.length;j++){
            if(arr[j]>arr[j+1]){
                const temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
        }
        return arr;
}
console.log(sort([2,3,6,5]));

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

   
                                                                                          LEVEL:3
                                                                                  =======================


// 1. JavaScript Program to calculate number of days between 2 Dates.



var date1,date2;
date1=new Date("7/15/2015");
date2=new Date("11/28/2016");

//calculate time difference

var time_difference=date2.getTime()-date1.getTime();

 //calculate days difference by dividing total milliseconds in a day  
 var days_difference = time_difference / (1000 * 60 * 60 * 24); 
 
 console.log("number of days between these two dates are"+" "+days_difference+" "+"days");

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 2. JavaScript Program to find the missing number in a given integer array of 1 to 100

function missingArray(arr){
    let missingArray=[];
    
    let minNum=Math.min(...arr);
    let maxNum=Math.max(...arr);
    
    for(let i=minNum; i<maxNum; i++){
        if(arr.indexOf(i) < 0){
            missingArray.push(i);
        }
    }
    return missingArray;
}

console.log(missingArray([1,2,4,5,7]))

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 3. JavaScript program to reverse the string using recursion.

function reverse(str){
  
    if(str.length <= 1){
        return str;
    }
  
    else {
        return str.charAt(str.length - 1) + reverse(str.substring(0, str.length - 1));
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 4. JavaScript program to create an object Student with 3 keys (name, id, city) and give them values. 
      Write the code to perform the following actions:
  i. Check if the key “name” exists in the object
  ii. Change the value of the key


function student(name,id,city){
    this.name=name;
    this.id=id;
    this.city=city;
}

student1=new student("Akshata",2,"belgaum");
student2=new student("amruta",5,"chennai");

// console.log(student1);
// console.log(student2);



if(student2["name"]!==undefined){
    student2.name="anu";
}

console.log(student2);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 5. JavaScript program to find the cumulative sum of an array.
        1. Initial Array: [1, 2, 3, 4]
        2. Cumulative Sum: [1, 3, 6, 10]
        3. Explanation: [1, (1+2), (1+2+3), (1+2+3+4)]



function cumilativeSum(arr){
    let sum=0;
    let arr2=[];
    for(let i=0;i<arr.length;i++){
        sum=sum+arr[i];
        // console.log(sum);
        arr2.push(sum);
    }
    return arr2;
}

console.log(cumilativeSum([1,2,3,4]));


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// 6.  Javascript program to sort an array using the following techniques:
       i. Linear Sort
       ii. Quick Sort
       iii. Bubble Sor

// Bubble Sort===


function bubbleSort(arr){
    for(let i=0;i<arr.length;i++){
        for(let j=0;j<arr.length;j++){
            if(arr[j]>arr[j+1]){
                let temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
    }
    return arr;
}

console.log(bubbleSort([1,3,2,5,4,7]));

----------------------------------------------------------------------------------------------------------

// Linear Sort===


function insertionSort(arr){
    if(arr.length<=1){
        return;
    }
    for(let i=1;i<arr.length;i++){
        let key=arr[i];
        let j;
        
        for(j=i-1;j>=0 && arr[j]>key; j--){
            arr[j+1]=arr[j];
        }
        arr[j+1]=key;
    }
    
}

function printArray(arr) 
{ 
    let i; 
    for (i = 0; i < n; i++) {
        console.log(arr[i]+" ");
    }
       
} 
   
// Driver code
    let arr = [12, 11, 13, 5, 6 ]; 
    let n = arr.length; 
   
    insertionSort(arr); 
    printArray(arr); 

--------------------------------------------------------------------------------------------------------

 
// Quick Sort====
//using recursion

function quickSort(array){
    if(arr.length==1){
        return array;
    }
    const pivot=array[array.length-1];
    const leftArr=[];
    const rightArr=[];
    
    for(let i=0;i<array.length-1;i++){
        if(array[i]<pivot){
            leftArr.push(array[i]);
        }else{
            rightArr.push(array[i]);
        }
    }
    
    if(leftArr.length>0 && rightArr.length>0){
        return[...quickSort(leftArr),pivot, ...quickSort(rightArr)];
    }else if(leftArr.length>0){
        return[...quickSort(leftArr),pivot];
    }else{
        return [pivot, ...quickSort(rightArr)];
    }
}

const arr=[1,4,2,5];

console.log(quickSort(arr));

//error: maximum call stack exeeded


-----------------------------------------

//without recurion quick sort


var items = [5,3,7,6,2,9];
function swap(items, leftIndex, rightIndex){
    var temp = items[leftIndex];
    items[leftIndex] = items[rightIndex];
    items[rightIndex] = temp;
}
function partition(items, left, right) {
    var pivot   = items[Math.floor((right + left) / 2)], //middle element
        i       = left, //left pointer
        j       = right; //right pointer
    while (i <= j) {
        while (items[i] < pivot) {
            i++;
        }
        while (items[j] > pivot) {
            j--;
        }
        if (i <= j) {
            swap(items, i, j); //sawpping two elements
            i++;
            j--;
        }
    }
    return i;
}

function quickSort(items, left, right) {
    var index;
    if (items.length > 1) {
        index = partition(items, left, right); //index returned from partition
        if (left < index - 1) { //more elements on the left side of the pivot
            quickSort(items, left, index - 1);
        }
        if (index < right) { //more elements on the right side of the pivot
            quickSort(items, index, right);
        }
    }
    return items;
}
// first call to quick sort
var sortedArray = quickSort(items, 0, items.length - 1);
console.log(sortedArray); //prints [2,3,5,6,7,9]

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
